<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloudinwind.selfmanage.mapper.blog.BlogDao">

    <resultMap id="blog" type="com.cloudinwind.selfmanage.entity.blog.Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="flag" column="flag"/>
        <result property="views" column="views"/>
        <result property="updateTime" column="update_time"/>
        <result property="typeId" column="type_id"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="published" column="published"/>
        <result property="appreciation" column="appreciation"/>
        <result property="commentabled" column="commentabled"/>
        <result property="description" column="description"/>
        <result property="recommend" column="recommend"/>
        <result property="createTime" column="create_time"/>
        <result property="typeId" column="type_id"/>
        <result property="userId" column="user_id"/>
        <result property="tagIds" column="tag_ids"/>
        <association property="type" javaType="com.cloudinwind.selfmanage.entity.blog.Type">
            <id property="id" column="typeid"/>
            <result property="name" column="typename"/>
        </association>
        <association property="user" javaType="com.cloudinwind.selfmanage.entity.User">
            <id property="id" column="uid"/>
            <result property="name" column="nickname"/>
            <result property="email" column="email"/>
            <result property="avatarUrl" column="avatar"/>
        </association>
        <collection property="tags" ofType="com.cloudinwind.selfmanage.entity.blog.Tag">
            <id property="id" column="tagid"/>
            <result property="name" column="tagname"/>
        </collection>
    </resultMap>

    <!--查询该用户发布的所有博客, 包含用户个人信息, 用户页面博客展示-->
    <select id="getUserBlog" resultMap="blog">
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
        t.name typename, t.id typeid,
        u.name nickname, u.avatar_url avatar
        from tb_blog b, tb_type t, user u
        where b.type_id = t.id and  u.id=#{userId} and u.id = b.user_id order by b.update_time desc
    </select>

    <!--获取所有推荐的用户博客-->
    <select id="getAllUserRecommendBlog" resultMap="blog">
        select id, title, recommend from tb_blog b
        where b.user_id=#{userId}
        order by update_time desc
        limit 5
    </select>


    <!--查询该用户该分类下的所有博客-->
    <select id="getByUserTypeId" resultMap="blog">
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
        t.name typename, t.id typeid,
        u.name nickname, u.avatar_url avatar
        from tb_blog b, tb_type t, user u
        where b.type_id = t.id and u.id = b.user_id and u.id=#{userId} and b.type_id = #{typeId}
        order by b.update_time desc
    </select>

    <!--查询该用户该标签下的所有博客-->
    <select id="getByUserTagId" resultMap="blog">
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
                t.name typename, t.id typeid,
                t1.name tagname, t1.id tagid,
                 u.name nickname, u.avatar_url avatar
        from tb_blog b, tb_type t, user u, tb_blog_tag tb, tb_tag t1
        where b.type_id = t.id and u.id = b.user_id and tb.blog_id = b.id and tb.tag_id = t1.id
			 and u.id = #{userId} and t1.id = #{tagId}
        order by b.update_time desc
    </select>

    <!--查询该用户发表博客的所有年份-->
    <select id="findUserBlogGroupYear" resultType="String">
        select DATE_FORMAT(b.update_time, '%Y')
        from tb_blog b
        where b.user_id = #{userId}
        order by b.update_time desc
    </select>

    <select id="findUserBlogByYear" resultMap="blog">
        select b.title, b.update_time, b.id, b.flag
        from tb_blog b
        where b.user_id=#{userId} and DATE_FORMAT(b.update_time, "%Y") = #{year}
    </select>



    <!--查询该用户发布的所有文章, 不包含用户信息-->
    <select id="getUserAllBlog" resultMap="blog">  /*后台博客展示*/
        select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published,
               t.id typeid, t.name typename
        from tb_blog b, tb_type t
        where b.user_id=#{userId} and b.type_id = t.id
    </select>



    <!--搜索当前用户发布的满足条件的博客-->
    <select id="getUserSearchBlog" resultMap="blog">
        <bind name="pattern" value="'%' + query + '%'" />
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
        t.name typename,
        u.name nickname, u.avatar_url avatar
        from tb_blog b, tb_type t, user u
        where b.type_id = t.id and  u.id = b.user_id and u.id=#{userId}
        and (b.title like #{pattern} or b.content like  #{pattern})
        order by b.update_time desc
    </select>


    <!--查找 博客详细内容-->
    <select id="getDetailedBlog" resultMap="blog">
        select b.id, b.first_picture, b.flag, b.title, b.content, b.views,
        b.update_time,b.commentabled, b.share_statement, b.appreciation,
         u.name nickname, u.avatar_url avatar,
        tag.id tagid, tag.name tagname
         from tb_blog b, user u, tb_tag tag, tb_blog_tag tb
        where b.user_id = u.id and tb.blog_id = b.id and tb.tag_id = tag.id and  b.id = #{id}
    </select>


    <!--后台根据标题、分类、推荐搜索博客-->
    <select id="searchUserAllBlog" parameterType="com.cloudinwind.selfmanage.entity.blog.Blog" resultMap="blog">
        <bind name="pattern" value="'%' + title + '%'" />    /*模糊查询*/
        select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published,
        t.id typeid, t.name typename
        from tb_blog b, tb_type t
        <where>
            <if test="1 == 1">
                b.type_id = t.id    /*博客类型id=类型id*/
            </if>
            <if test="typeId != null">
                and b.type_id = #{typeId}       /*根据博客类型查询*/
            </if>
            <if test="recommend != null">
                and b.recommend = #{recommend}   /*根据博客推荐查询*/
            </if>
            <if test="title != null">
                and b.title like #{pattern}   /*根据博客title模糊查询*/
            </if>
            <if test="userId != null">
                and b.user_id = #{userId}
            </if>
        </where>
    </select>


    <select id="getBlogById" resultMap="blog"> /*后台展示博客*/
        select b.id, b.published, b.flag, b.title, b.content, b.type_id,
         b.tag_ids, b.first_picture, b.description, b.recommend,
         b.share_statement, b.appreciation, b.commentabled
        from tb_blog b  where  b.id = #{id};
    </select>

    <insert id="saveBlog" parameterType="com.cloudinwind.selfmanage.vo.blog.BlogVo" useGeneratedKeys="true" keyProperty="id">
        insert into tb_blog (title, content, first_picture, flag,
        views, appreciation, share_statement, commentabled,published,
        recommend, create_time, update_time, type_id, tag_ids, user_id, description)
        values (#{title}, #{content}, #{firstPicture}, #{flag}, #{views}, #{appreciation},
        #{shareStatement}, #{commentabled}, #{published}, #{recommend}, #{createTime},
        #{updateTime}, #{typeId}, #{tagIds}, #{userId}, #{description});
    </insert>

    <update id="updateBlog" parameterType="com.cloudinwind.selfmanage.vo.blog.BlogVo">
        update tb_blog set published = #{published},flag = #{flag} ,
        title = #{title}, content = #{content}, type_id = #{typeId}, tag_ids = #{tagIds},
        first_picture = #{firstPicture} , description = #{description} , recommend = #{recommend} ,
        share_statement = #{shareStatement}, appreciation = #{appreciation},
        commentabled = #{commentabled} ,update_time = #{updateTime} where id = #{id};
    </update>


</mapper>

